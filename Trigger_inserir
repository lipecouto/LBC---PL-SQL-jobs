DROP TRIGGER SANKHYA.TRG_INC_TGFCAB_DEV_LUIZA;

CREATE OR REPLACE TRIGGER SANKHYA.TRG_INC_TGFCAB_DEV_LUIZA
BEFORE UPDATE
OF AD_CONFERIDO
ON SANKHYA.TGFCAB
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DISABLE
DECLARE

/******************************************************************************
   NAME:       TRG_INC_TGFCAB_DEV_LUIZA
   PURPOSE:    

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        20/08/2015      LBC-NOT       1. Created this trigger.

   NOTES:

   Automatically available Auto Replace Keywords:
      Object Name:     TRG_INC_TGFCAB_DEV_LUIZA
      Sysdate:         20/08/2015
      Date and Time:   20/08/2015, 17:26:06, and 20/08/2015 17:26:06
      Username:        LBC-NOT (set in TOAD Options, Proc Templates)
      Table Name:      TGFCAB (set in the "New PL/SQL Object" dialog)
      Trigger Options:  (set in the "New PL/SQL Object" dialog)
******************************************************************************/

tmpVar NUMBER;
tmpVar_1 VARCHAR(100);
var_dtneg       TGFCAB.DTENTSAI%TYPE;
var_codemp      TSIEMP.CODEMP%TYPE;
var_maxnunota   TGFCAB.NUNOTA%TYPE;
var_top         TGFTOP.CODTIPOPER%TYPE;
var_dttop       TGFTOP.CODTIPOPER%TYPE;
var_tipvenda    TGFTPV.CODTIPVENDA%TYPE;
var_dhtipvenda  TGFTPV.DHALTER%TYPE;

CURSOR C1 (var_codemp_cursor TSIEMP.CODEMP%TYPE
           ,var_codprod TGFITE.CODPROD%TYPE ) IS
           -- cursor para buscsar as devoluções nda View LUIZA_DEVOLUCAO_COMPRA
    SELECT CODPROD as prod, CODEMP as emp, NUNOTA as nrounico, DTENTSAI as dtlanc, CODPROD as produto
         , CONTROLE as numeracao, CODPARC as parceiro, DISPONIVEL
         FROM LUIZA_DEVOLUCAO_COMPRA
         WHERE CODEMP = var_codemp_cursor
         AND   CODPROD = var_codprod
         AND   CONTROLE = var_controle
         AND   DISPONIVEL >= var_qtdneg;
          


PRAGMA AUTONOMOUS_TRANSACTION; -- Pragma necessário para inserir dados na tabela que acionou a trigger (TGFCAB)
BEGIN
   tmpVar := 0;
   
   IF(:NEW.AD_CONFERIDO = 'S') THEN
    
   
    
    SELECT CODEMP INTO var_codemp
     FROM TSIUSU WHERE CODUSU = :NEW.CODUSU; -- Select para buscar o código da empresa do usuário logado
    
    SELECT MAX(NUNOTA) +1 INTO var_maxnunota -- Select para pegar o maior nro unico da tabela TGFCAB e acrecentar +1 para a nova nota que está sendo inserida via esta trigger
     FROM TGFCAB;
   
    SELECT MAX(CODTIPVENDA), MAX(DHALTER) INTO var_tipvenda, var_dhtipvenda
     FROM TGFTPV WHERE CODTIPVENDA = 47;
   
    
   FOR R1 IN (SELECT CODPROD, CONTROLE, QTDNEG FROM TGFITE WHERE NUNOTA = :NEW.NUNOTA) -- Loop para percorer a TGFITE filha da TGFCAB que acionou a trigger e buscar dados dos produtos lançados
   
    LOOP          
                    

    FOR R2 IN C1 ( var_codemp_cursor => var_codemp
                 ,var_codprod => R1.CODPROD 
                 ,var_controle => R1.CONTROLE
                 ,var_qtdneg   => R1.QTDNEG) -- Chamada do cursor C1 com passagem de paramêtros na execução
   
     LOOP
     
     
    
     
     IF C1%NOTFOUND then
        tmpVar := tmpVar +1; -- armaneza quantas linhas não foram localizadas dentro do Cursor.
        tmpVar_1 := tmpVar ||'/ '||C1.CODPROD; -- Armazena os produtos que não foram inseridos   
     END IF;  
     
     SELECT CODTIPOPER, DHALTER into var_top, var_dttop
     FROM TGFTOP --Seleciona  MAX(DHALTER) da top de devolução de acordo com o parceiro da nota de origem
     WHERE CODTIPOPER = DECODE(:NEW.AD_MOTIVODEV,1,206,case when R1.parceiro = 2 or R1.parceiro = 20614 then 0 end, 204,201);
     
     INSERT INTO TGFCAB (NUNOTA,CODEMP,CODCENCUS,NUMNOTA,DTNEG,CODEMPNEGOC,CODPARC,RATEADO,CODVEICULO,CODTIPOPER,DHTIPOPER,TIPMOV,CODTIPVENDA,DHTIPVENDA,CODVEND,COMISSAO,CODMOEDA,
                          CODOBSPADRAO,VLRSEG,VLRICMSSEG,VLRDESTAQUE,VLRJURO,VLRVENDOR,VLROUTROS,VLREMB,VLRICMSEMB,VLRDESCSERV,IPIEMB,TIPIPIEMB,VLRDESCTOT,VLRDESCTOTITEM,VLRFRETE,
                          ICMSFRETE,BASEICMSFRETE,TIPFRETE,VLRNOTA,CODPARCTRANSP,QTDVOL,PENDENTE,BASEICMS,VLRICMS,BASEIPI,VLRIPI,ISSRETIDO,BASEISS,VLRISS,APROVADO,STATUSNOTA,IRFRETIDO,
                          VLRIRF,DTALTER,CODPARCDEST,VLRSUBST,BASESUBSTIT,CODPROJ,NUMCONTRATO,BASEINSS,VLRINSS,VLRREPREDTOT,PERCDESC,CODPARCREMETENTE,CODPARCCONSIGNATARIO,CODPARCREDESPACHO,CODNAT,
                          TROCO,CODUSUCOMPRADOR,CODEMP,CODEMPNEGOC,RATEADO,TIPIPIEMB,TIPFRETE,PENDENTE,ISSRETIDO,STATUSNOTA,IRFRETIDO,NUNOTA,TIPMOV,TIPOPTAGJNFE,STATUSNFSE,RETDATACRITICA,AGRUPBOL,
                          STATUSNFE,VLRLIQITEMNFE,CIF_FOB,LIBCONF,STATUSXTRATEGIE,CODAGENDA,CODPROJ,CODFUNC,CODEMPFUNC,NUMCOTACAO,CODEMP,CODEMPNEGOC,NUNOTAPEDFRET,NURD8,NUREM,NULOTENFE,NULOTENFSE,
                          CODMAQ,CODNAT,CODOBSPADRAO,CODMOTORISTA,CODPARCTRANSP,CODPARC,CODPARCDEST,CODSITE,DHTIPOPER,CODTIPOPER,DHTIPVENDA,CODTIPVENDA,CODDOCA,CODCID,CODCENCUS,CODMOEDA,UFVEICULO,
                          CODUSU,CODUSUINC,NUMOS,CODVEICULO,CODVEND,CODVENDTEC,NUMCONTRATO,CODRESIDUO,CODCC,NUCONFATUAL,CODSAF,PESOBRUTOMANUAL,PESOLIQUIMANUAL,CODTPD,CODVTP,INDPRESNFCE,CANCELADO,
                          VIATRANSP,TIPPROCIMP,TPEMISCTE,TPAMBCTE,LOTACAO,STATUSCTE,REBOQUE1,REBOQUE2,REBOQUE3,CTELOTACAO,CODVEITRACAO,SITUACAOCTE)
        
     END LOOP; 
    
   
    END LOOP;

    
   END IF;
   
COMMIT;   
END TRG_INC_TGFCAB_DEV_LUIZA;
/
